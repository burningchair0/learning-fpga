
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060)


-- Running command `verilog_defaults -add -I./' --

-- Running command `read_verilog -sv top.sv ./motor_drv/motor_drv.sv ./control/control.sv ./servo_pdm/servo_pdm.v ./ir_decoder/ir_decoder.v ./adc_capture/adc_capture.sv ./adc_hysteresis/adc_hysteresis.sv' --

1. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
top.sv:105: Warning: Identifier `\adc_ack' is implicitly declared.
top.sv:106: Warning: Identifier `\address' is implicitly declared.
top.sv:107: Warning: Identifier `\dout_bit' is implicitly declared.
top.sv:108: Warning: Identifier `\sclk' is implicitly declared.
top.sv:109: Warning: Identifier `\cs' is implicitly declared.
top.sv:110: Warning: Identifier `\adc_ready' is implicitly declared.
top.sv:111: Warning: Identifier `\din_bit' is implicitly declared.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ./motor_drv/motor_drv.sv
Parsing SystemVerilog input from `./motor_drv/motor_drv.sv' to AST representation.
Generating RTLIL representation for module `\motor_drv'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ./control/control.sv
Parsing SystemVerilog input from `./control/control.sv' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ./servo_pdm/servo_pdm.v
Parsing SystemVerilog input from `./servo_pdm/servo_pdm.v' to AST representation.
Generating RTLIL representation for module `\servo_pdm'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ./ir_decoder/ir_decoder.v
Parsing SystemVerilog input from `./ir_decoder/ir_decoder.v' to AST representation.
Generating RTLIL representation for module `\ir_decoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ./adc_capture/adc_capture.sv
Parsing SystemVerilog input from `./adc_capture/adc_capture.sv' to AST representation.
Generating RTLIL representation for module `\adc_capture'.
Warning: wire '\ctl_valid0' is assigned in a block at ./adc_capture/adc_capture.sv:31.4-31.22.
./adc_capture/adc_capture.sv:31: Warning: Identifier `\ctl_valid0' is implicitly declared.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ./adc_hysteresis/adc_hysteresis.sv
Parsing SystemVerilog input from `./adc_hysteresis/adc_hysteresis.sv' to AST representation.
Generating RTLIL representation for module `\adc_hysteresis'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json cart.json -top top' --

8. Executing SYNTH_ECP5 pass.

8.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_COMB'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

8.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

8.3. Executing HIERARCHY pass (managing design hierarchy).

8.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \adc_capture
Used module:     \adc_hysteresis
Used module:     \ir_decoder
Used module:     \servo_pdm
Used module:     \motor_drv
Used module:     \control
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 500000
Parameter \cycle_pause = 30

8.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\adc_capture'.
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 500000
Parameter \cycle_pause = 30
Generating RTLIL representation for module `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture'.
Warning: wire '\ctl_valid0' is assigned in a block at ./adc_capture/adc_capture.sv:31.4-31.22.
./adc_capture/adc_capture.sv:31: Warning: Identifier `\ctl_valid0' is implicitly declared.
Parameter \x_High = 12'101110111000
Parameter \x_Low = 12'001111101000

8.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\adc_hysteresis'.
Parameter \x_High = 12'101110111000
Parameter \x_Low = 12'001111101000
Generating RTLIL representation for module `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000'.
Parameter \clk_hz = 25000000

8.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servo_pdm'.
Parameter \clk_hz = 25000000
Generating RTLIL representation for module `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000'.
Parameter \clk_hz = 25000000
Parameter \pwm_hz = 250

8.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_drv'.
Parameter \clk_hz = 25000000
Parameter \pwm_hz = 250
Generating RTLIL representation for module `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv'.
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 256
Parameter \servo_step = 16

8.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\control'.
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 256
Parameter \servo_step = 16
Generating RTLIL representation for module `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control'.

8.3.7. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture
Used module:     $paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000
Used module:     \ir_decoder
Used module:     $paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000
Used module:     $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv
Used module:     $paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control

8.3.8. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture
Used module:     $paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000
Used module:     \ir_decoder
Used module:     $paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000
Used module:     $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv
Used module:     $paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control
Removing unused module `\adc_hysteresis'.
Removing unused module `\adc_capture'.
Removing unused module `\servo_pdm'.
Removing unused module `\control'.
Removing unused module `\motor_drv'.
Removed 5 unused modules.
Warning: Resizing cell port top.adc_capture_inst.address from 1 bits to 3 bits.

8.4. Executing PROC pass (convert processes to netlists).

8.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:213$195'.
Cleaned up 1 empty switch.

8.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:350$302 in module TRELLIS_FF.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:285$254 in module DPR16X4C.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:221$196 in module TRELLIS_DPR16X4.
Marked 2 switch rules as full_case in process $proc$./control/control.sv:49$349 in module $paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.
Marked 2 switch rules as full_case in process $proc$./control/control.sv:33$345 in module $paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.
Marked 1 switch rules as full_case in process $proc$./motor_drv/motor_drv.sv:19$336 in module $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.
Marked 6 switch rules as full_case in process $proc$./ir_decoder/ir_decoder.v:43$37 in module ir_decoder.
Marked 1 switch rules as full_case in process $proc$./ir_decoder/ir_decoder.v:27$33 in module ir_decoder.
Marked 3 switch rules as full_case in process $proc$./servo_pdm/servo_pdm.v:25$330 in module $paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.
Marked 2 switch rules as full_case in process $proc$./adc_hysteresis/adc_hysteresis.sv:13$323 in module $paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.
Marked 3 switch rules as full_case in process $proc$./adc_capture/adc_capture.sv:74$315 in module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
Marked 1 switch rules as full_case in process $proc$./adc_capture/adc_capture.sv:59$310 in module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
Marked 2 switch rules as full_case in process $proc$./adc_capture/adc_capture.sv:24$304 in module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
Removed a total of 0 dead cases.

8.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 43 assignments to connections.

8.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$303'.
  Set init value: \Q = 1'0

8.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
Found async reset \rst in `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:33$345'.
Found async reset \rst in `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$./motor_drv/motor_drv.sv:19$336'.
Found async reset \rst in `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
Found async reset \rst in `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:27$33'.
Found async reset \rst in `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
Found async reset \rst in `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.$proc$./adc_hysteresis/adc_hysteresis.sv:13$323'.
Found async reset \rst in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:59$310'.
Found async reset \rst in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.

8.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~40 debug messages>

8.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$303'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:350$302'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
Creating decoders for process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:285$254'.
     1/3: $1$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:287$253_EN[3:0]$260
     2/3: $1$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:287$253_DATA[3:0]$259
     3/3: $1$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:287$253_ADDR[3:0]$258
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:221$196'.
     1/3: $1$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:223$194_EN[3:0]$202
     2/3: $1$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:223$194_DATA[3:0]$201
     3/3: $1$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:223$194_ADDR[3:0]$200
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:213$195'.
Creating decoders for process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
     1/6: $0\ack_int[0:0]
     2/6: $0\ctl_valid[0:0]
     3/6: $0\state[0:0]
     4/6: $0\direction[0:0]
     5/6: $0\servo_dc[7:0]
     6/6: $0\motor_dc[7:0]
Creating decoders for process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:33$345'.
     1/2: $0\frdiv[15:0]
     2/2: $0\sclk[0:0]
Creating decoders for process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$./motor_drv/motor_drv.sv:19$336'.
     1/2: $0\pwm_counter[7:0]
     2/2: $0\clock_counter[8:0]
Creating decoders for process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
     1/10: $6\cmd[31:0]
     2/10: $5\cmd[31:0]
     3/10: $4\cmd[31:0]
     4/10: $3\cmd[31:0]
     5/10: $2\cmd[31:0]
     6/10: $1\cmd[31:0]
     7/10: $0\bit_count[7:0]
     8/10: $0\t1[20:0]
     9/10: $0\ir_input_last[0:0]
    10/10: $0\ready[0:0]
Creating decoders for process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:27$33'.
     1/1: $0\slow_clk_div[15:0]
Creating decoders for process `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
     1/3: $0\pdm_done_reg[0:0]
     2/3: $0\div_counter[18:0]
     3/3: $0\pdmw_counter[15:0]
Creating decoders for process `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.$proc$./adc_hysteresis/adc_hysteresis.sv:13$323'.
     1/2: $0\not_d_signal[11:0]
     2/2: $0\can_move_fwd[0:0]
Creating decoders for process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
     1/5: $1\cs_pause[4:0]
     2/5: $1\cs_reg[4:0]
     3/5: $1\dout[15:0]
     4/5: $1\adc_ready[0:0]
     5/5: $1\cs[0:0]
Creating decoders for process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:59$310'.
     1/2: $0\din[7:0]
     2/2: $0\din_bit[0:0]
Creating decoders for process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
     1/9: $0\frdiv[4:0]
     2/9: $0\ctl_valid0[0:0]
     3/9: $0\cs_pause[4:0]
     4/9: $0\cs_reg[4:0]
     5/9: $0\dout[15:0]
     6/9: $0\clk2[0:0]
     7/9: $0\adc_ready[0:0]
     8/9: $0\cs[0:0]
     9/9: $0\sclk[0:0]

8.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:350$302'.
  created $dff cell `$procdff$623' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$238_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$239_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$240_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$241_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$242_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$243_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$244_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$245_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$246_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$247_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$248_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$249_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$250_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$251_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:281$252_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:287$253_ADDR' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:285$254'.
  created $dff cell `$procdff$624' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:287$253_DATA' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:285$254'.
  created $dff cell `$procdff$625' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/bin/../share/yosys/ecp5/cells_sim.v:287$253_EN' using process `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:285$254'.
  created $dff cell `$procdff$626' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$178_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$179_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$180_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$181_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$182_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$183_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$184_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$185_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$186_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$187_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$188_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$189_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$190_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$191_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$192_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:207$193_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:223$194_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:221$196'.
  created $dff cell `$procdff$627' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:223$194_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:221$196'.
  created $dff cell `$procdff$628' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/bin/../share/yosys/ecp5/cells_sim.v:223$194_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:221$196'.
  created $dff cell `$procdff$629' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:213$195'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\motor_dc' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
  created $adff cell `$procdff$630' with positive edge clock and positive level reset.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\servo_dc' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
  created $adff cell `$procdff$631' with positive edge clock and positive level reset.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\direction' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
  created $adff cell `$procdff$632' with positive edge clock and positive level reset.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\state' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
  created $adff cell `$procdff$633' with positive edge clock and positive level reset.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\ctl_valid' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
  created $dff cell `$procdff$636' with positive edge clock.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\ack_int' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
  created $adff cell `$procdff$637' with positive edge clock and positive level reset.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\sclk' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:33$345'.
  created $adff cell `$procdff$638' with positive edge clock and positive level reset.
Creating register for signal `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.\frdiv' using process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:33$345'.
  created $adff cell `$procdff$639' with positive edge clock and positive level reset.
Creating register for signal `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.\clock_counter' using process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$./motor_drv/motor_drv.sv:19$336'.
  created $adff cell `$procdff$640' with positive edge clock and positive level reset.
Creating register for signal `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.\pwm_counter' using process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$./motor_drv/motor_drv.sv:19$336'.
  created $adff cell `$procdff$641' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder.\ready' using process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
  created $adff cell `$procdff$642' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder.\ir_input_last' using process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
  created $adff cell `$procdff$643' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder.\t1' using process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
  created $adff cell `$procdff$644' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder.\bit_count' using process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
  created $adff cell `$procdff$645' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder.\cmd' using process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
  created $adff cell `$procdff$646' with positive edge clock and positive level reset.
Creating register for signal `\ir_decoder.\slow_clk_div' using process `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:27$33'.
  created $adff cell `$procdff$647' with positive edge clock and positive level reset.
Creating register for signal `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.\pdmw_counter' using process `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
  created $adff cell `$procdff$648' with positive edge clock and positive level reset.
Creating register for signal `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.\div_counter' using process `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
  created $adff cell `$procdff$649' with positive edge clock and positive level reset.
Creating register for signal `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.\pdm_done_reg' using process `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
  created $adff cell `$procdff$650' with positive edge clock and positive level reset.
Creating register for signal `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.\can_move_fwd' using process `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.$proc$./adc_hysteresis/adc_hysteresis.sv:13$323'.
  created $adff cell `$procdff$651' with positive edge clock and positive level reset.
Creating register for signal `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.\not_d_signal' using process `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.$proc$./adc_hysteresis/adc_hysteresis.sv:13$323'.
  created $adff cell `$procdff$652' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\adc_ready' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
  created $dff cell `$procdff$654' with positive edge clock.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\dout' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
  created $dff cell `$procdff$655' with positive edge clock.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs_reg' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
  created $dff cell `$procdff$656' with positive edge clock.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs_pause' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
  created $dff cell `$procdff$657' with positive edge clock.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\din_bit' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:59$310'.
  created $adff cell `$procdff$658' with negative edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\din' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:59$310'.
  created $adff cell `$procdff$659' with negative edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\sclk' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$660' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$661' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\adc_ready' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$662' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\frdiv' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$663' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\clk2' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$664' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\dout' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$665' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs_reg' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$666' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs_pause' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$667' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\ctl_valid0' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
  created $adff cell `$procdff$668' with positive edge clock and positive level reset.

8.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$303'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:350$302'.
Removing empty process `TRELLIS_FF.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:350$302'.
Removing empty process `DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$277'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:285$254'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:0$220'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:221$196'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/bin/../share/yosys/ecp5/cells_sim.v:213$195'.
Found and cleaned up 9 empty switches in `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
Removing empty process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:49$349'.
Found and cleaned up 1 empty switch in `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:33$345'.
Removing empty process `$paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.$proc$./control/control.sv:33$345'.
Found and cleaned up 2 empty switches in `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$./motor_drv/motor_drv.sv:19$336'.
Removing empty process `$paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.$proc$./motor_drv/motor_drv.sv:19$336'.
Found and cleaned up 9 empty switches in `\ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
Removing empty process `ir_decoder.$proc$./ir_decoder/ir_decoder.v:43$37'.
Removing empty process `ir_decoder.$proc$./ir_decoder/ir_decoder.v:27$33'.
Found and cleaned up 4 empty switches in `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
Removing empty process `$paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.$proc$./servo_pdm/servo_pdm.v:25$330'.
Found and cleaned up 2 empty switches in `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.$proc$./adc_hysteresis/adc_hysteresis.sv:13$323'.
Removing empty process `$paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.$proc$./adc_hysteresis/adc_hysteresis.sv:13$323'.
Found and cleaned up 5 empty switches in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
Removing empty process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:74$315'.
Found and cleaned up 2 empty switches in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:59$310'.
Removing empty process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:59$310'.
Found and cleaned up 2 empty switches in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
Removing empty process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$./adc_capture/adc_capture.sv:24$304'.
Cleaned up 40 empty switches.

8.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.
<suppressed ~1 debug messages>
Optimizing module $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.
Optimizing module ir_decoder.
<suppressed ~13 debug messages>
Optimizing module $paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.
<suppressed ~2 debug messages>
Optimizing module $paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.
Optimizing module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
<suppressed ~9 debug messages>
Optimizing module top.

8.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$2c0ba7385133d830973c567b60e4ffbf6098cc92\control.
Deleting now unused module $paramod$09b1f11fef2c7b1a8b7cc9f7386544e7bf55dc2f\motor_drv.
Deleting now unused module ir_decoder.
Deleting now unused module $paramod\servo_pdm\clk_hz=s32'00000001011111010111100001000000.
Deleting now unused module $paramod\adc_hysteresis\x_High=12'101110111000\x_Low=12'001111101000.
Deleting now unused module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
<suppressed ~6 debug messages>

8.6. Executing TRIBUF pass.

8.7. Executing DEMINOUT pass (demote inout ports to input or output).

8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 153 unused wires.
<suppressed ~27 debug messages>

8.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_pause [4]:
    port Q[4] of cell $flatten\adc_capture_inst.$procdff$657 ($dff)
    port Q[4] of cell $flatten\adc_capture_inst.$procdff$667 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_pause [3]:
    port Q[3] of cell $flatten\adc_capture_inst.$procdff$657 ($dff)
    port Q[3] of cell $flatten\adc_capture_inst.$procdff$667 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_pause [2]:
    port Q[2] of cell $flatten\adc_capture_inst.$procdff$657 ($dff)
    port Q[2] of cell $flatten\adc_capture_inst.$procdff$667 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_pause [1]:
    port Q[1] of cell $flatten\adc_capture_inst.$procdff$657 ($dff)
    port Q[1] of cell $flatten\adc_capture_inst.$procdff$667 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_pause [0]:
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$657 ($dff)
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$667 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_reg [4]:
    port Q[4] of cell $flatten\adc_capture_inst.$procdff$656 ($dff)
    port Q[4] of cell $flatten\adc_capture_inst.$procdff$666 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_reg [3]:
    port Q[3] of cell $flatten\adc_capture_inst.$procdff$656 ($dff)
    port Q[3] of cell $flatten\adc_capture_inst.$procdff$666 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_reg [2]:
    port Q[2] of cell $flatten\adc_capture_inst.$procdff$656 ($dff)
    port Q[2] of cell $flatten\adc_capture_inst.$procdff$666 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_reg [1]:
    port Q[1] of cell $flatten\adc_capture_inst.$procdff$656 ($dff)
    port Q[1] of cell $flatten\adc_capture_inst.$procdff$666 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs_reg [0]:
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$656 ($dff)
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$666 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [15]:
    port Q[15] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[15] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [14]:
    port Q[14] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[14] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [13]:
    port Q[13] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[13] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [12]:
    port Q[12] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[12] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [11]:
    port Q[11] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[11] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [10]:
    port Q[10] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[10] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [9]:
    port Q[9] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[9] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [8]:
    port Q[8] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[8] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [7]:
    port Q[7] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[7] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [6]:
    port Q[6] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[6] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [5]:
    port Q[5] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[5] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [4]:
    port Q[4] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[4] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [3]:
    port Q[3] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[3] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [2]:
    port Q[2] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[2] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [1]:
    port Q[1] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[1] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.dout [0]:
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$655 ($dff)
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$665 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.adc_ready:
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$654 ($dff)
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$662 ($adff)
Warning: multiple conflicting drivers for top.\adc_capture_inst.cs:
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$653 ($dff)
    port Q[0] of cell $flatten\adc_capture_inst.$procdff$661 ($adff)
Warning: Wire top.\adc_capture_inst.adc_ack is used but has no driver.
Warning: Wire top.\adc_capture_inst.dout_bit is used but has no driver.
Found and reported 30 problems.

8.11. Executing OPT pass (performing simple optimizations).

8.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\adc_capture_inst.$procmux$598: \adc_capture_inst.cs -> 1'1
      Replacing known input bits on port A of cell $flatten\adc_capture_inst.$procmux$602: \adc_capture_inst.cs -> 1'0
      Replacing known input bits on port B of cell $flatten\servo_inst.$procmux$537: \gpio [2] -> 1'1
      Replacing known input bits on port A of cell $flatten\servo_inst.$procmux$533: \gpio [2] -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$458.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$461.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$463.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$470.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$473.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$475.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$482.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$484.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$490.
Removed 9 multiplexer ports.
<suppressed ~32 debug messages>

8.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\adc_capture_inst.$procdff$667 ($adff) from module top (removing D path).
Handling D = Q on $flatten\adc_capture_inst.$procdff$666 ($adff) from module top (removing D path).
Handling D = Q on $flatten\adc_capture_inst.$procdff$665 ($adff) from module top (removing D path).
Handling D = Q on $flatten\adc_capture_inst.$procdff$662 ($adff) from module top (removing D path).
Handling D = Q on $flatten\adc_capture_inst.$procdff$661 ($adff) from module top (removing D path).
Setting constant 0-bit at position 0 on $flatten\adc_capture_inst.$procdff$661 ($dlatch) from module top.
Setting constant 0-bit at position 0 on $flatten\adc_capture_inst.$procdff$662 ($dlatch) from module top.
Setting constant 0-bit at position 0 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 1 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 2 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 3 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 4 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 5 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 6 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 7 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 8 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 9 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 10 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 11 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 12 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 13 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 14 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 15 on $flatten\adc_capture_inst.$procdff$665 ($dlatch) from module top.
Setting constant 0-bit at position 0 on $flatten\adc_capture_inst.$procdff$666 ($dlatch) from module top.
Setting constant 0-bit at position 1 on $flatten\adc_capture_inst.$procdff$666 ($dlatch) from module top.
Setting constant 0-bit at position 2 on $flatten\adc_capture_inst.$procdff$666 ($dlatch) from module top.
Setting constant 0-bit at position 3 on $flatten\adc_capture_inst.$procdff$666 ($dlatch) from module top.
Setting constant 0-bit at position 4 on $flatten\adc_capture_inst.$procdff$666 ($dlatch) from module top.
Setting constant 0-bit at position 0 on $flatten\adc_capture_inst.$procdff$667 ($dlatch) from module top.
Setting constant 0-bit at position 1 on $flatten\adc_capture_inst.$procdff$667 ($dlatch) from module top.
Setting constant 0-bit at position 2 on $flatten\adc_capture_inst.$procdff$667 ($dlatch) from module top.
Setting constant 0-bit at position 3 on $flatten\adc_capture_inst.$procdff$667 ($dlatch) from module top.
Setting constant 0-bit at position 4 on $flatten\adc_capture_inst.$procdff$667 ($dlatch) from module top.

8.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Warning: Driver-driver conflict for \adc_capture_inst.dout [11] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [10] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [9] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [8] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [7] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [6] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [5] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [4] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [3] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [2] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [1] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \adc_capture_inst.dout [0] between cell $flatten\adc_capture_inst.$procdff$655.Q and constant 1'0 in top: Resolved using constant.
Removed 34 unused cells and 43 unused wires.
<suppressed ~39 debug messages>

8.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.11.9. Rerunning OPT passes. (Maybe there is more to do..)

8.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

8.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 1 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 3 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 4 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 5 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 7 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 8 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 10 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.
Setting constant 1-bit at position 11 on $flatten\hysteresis_inst.$procdff$652 ($adff) from module top.

8.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

8.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.16. Rerunning OPT passes. (Maybe there is more to do..)

8.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

8.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.11.20. Executing OPT_DFF pass (perform DFF optimizations).

8.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.23. Finished OPT passes. (There is nothing left to do.)

8.12. Executing FSM pass (extract and optimize FSM).

8.12.1. Executing FSM_DETECT pass (finding FSMs in design).

8.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.13. Executing OPT pass (performing simple optimizations).

8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\servo_inst.$procdff$650 ($adff) from module top (D = $flatten\servo_inst.$procmux$539_Y, Q = \gpio [2]).
Adding EN signal on $flatten\servo_inst.$procdff$649 ($adff) from module top (D = $flatten\servo_inst.$procmux$547_Y, Q = \servo_inst.div_counter).
Adding EN signal on $flatten\servo_inst.$procdff$648 ($adff) from module top (D = $flatten\servo_inst.$procmux$557_Y, Q = \servo_inst.pdmw_counter).
Adding EN signal on $flatten\motor_inst.$procdff$641 ($adff) from module top (D = $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:27$339_Y, Q = \motor_inst.pwm_counter).
Adding EN signal on $flatten\hysteresis_inst.$procdff$651 ($adff) from module top (D = $flatten\hysteresis_inst.$0\can_move_fwd[0:0], Q = \hysteresis_inst.can_move_fwd).
Adding EN signal on $flatten\decoder_inst.$procdff$646 ($adff) from module top (D = $flatten\decoder_inst.$6\cmd[31:0] [31:1], Q = \decoder_inst.cmd [31:1]).
Adding EN signal on $flatten\decoder_inst.$procdff$646 ($adff) from module top (D = $flatten\decoder_inst.$6\cmd[31:0] [0], Q = \decoder_inst.cmd [0]).
Adding EN signal on $flatten\decoder_inst.$procdff$645 ($adff) from module top (D = $flatten\decoder_inst.$procmux$507_Y, Q = \decoder_inst.bit_count).
Adding EN signal on $flatten\decoder_inst.$procdff$644 ($adff) from module top (D = $flatten\decoder_inst.$procmux$516_Y, Q = \decoder_inst.t1).
Adding EN signal on $flatten\decoder_inst.$procdff$643 ($adff) from module top (D = \gpio [3], Q = \decoder_inst.ir_input_last).
Adding EN signal on $flatten\decoder_inst.$procdff$642 ($adff) from module top (D = $flatten\decoder_inst.$procmux$529_Y, Q = \decoder_inst.ready).
Adding EN signal on $flatten\control_inst.$procdff$638 ($adff) from module top (D = $flatten\control_inst.$not$./control/control.sv:42$347_Y, Q = \control_inst.sclk).
Adding EN signal on $flatten\control_inst.$procdff$636 ($dff) from module top (D = 1'1, Q = \control_inst.ctl_valid).
Adding EN signal on $flatten\control_inst.$procdff$633 ($adff) from module top (D = $flatten\control_inst.$procmux$387_Y, Q = \control_inst.state).
Adding EN signal on $flatten\control_inst.$procdff$632 ($adff) from module top (D = $flatten\control_inst.$procmux$399_Y, Q = \control_inst.direction).
Adding EN signal on $flatten\control_inst.$procdff$631 ($adff) from module top (D = $flatten\control_inst.$procmux$417_Y, Q = \control_inst.servo_dc).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$712 ($dffe) from module top.

8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 18 unused wires.
<suppressed ~19 debug messages>

8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$710: { $auto$opt_dff.cc:194:make_patterns_logic$705 $auto$opt_dff.cc:194:make_patterns_logic$707 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$698: { $auto$opt_dff.cc:194:make_patterns_logic$693 $auto$rtlil.cc:2401:Not$696 \decoder_inst.strobe_front }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$691: { $auto$rtlil.cc:2401:Not$689 \decoder_inst.strobe_front }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$682: { $auto$opt_dff.cc:194:make_patterns_logic$677 $auto$opt_dff.cc:194:make_patterns_logic$679 }
  Optimizing cells in module \top.
Performed a total of 4 changes.

8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$ff.cc:266:slice$670 ($adffe) from module top.
Removing always-active EN on $auto$ff.cc:266:slice$703 ($adffe) from module top.
Removing always-active EN on $auto$ff.cc:266:slice$702 ($adffe) from module top.

8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.13.16. Rerunning OPT passes. (Maybe there is more to do..)

8.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

8.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.13.20. Executing OPT_DFF pass (perform DFF optimizations).

8.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.13.23. Finished OPT passes. (There is nothing left to do.)

8.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$434_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$431_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$428_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$416_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$413_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$410_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$401_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$400_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$389_CMP0 ($eq).
Removed top 1 bits (of 32) from port B of cell top.$flatten\control_inst.$procmux$388_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\control_inst.$sub$./control/control.sv:98$359 ($sub).
Removed top 2 bits (of 8) from port B of cell top.$flatten\control_inst.$ge$./control/control.sv:97$358 ($ge).
Removed top 2 bits (of 8) from port B of cell top.$flatten\control_inst.$add$./control/control.sv:94$357 ($add).
Removed top 3 bits (of 8) from port B of cell top.$flatten\control_inst.$sub$./control/control.sv:90$354 ($sub).
Removed top 3 bits (of 8) from port B of cell top.$flatten\control_inst.$ge$./control/control.sv:89$353 ($ge).
Removed top 3 bits (of 8) from port B of cell top.$flatten\control_inst.$add$./control/control.sv:86$352 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\control_inst.$add$./control/control.sv:45$348 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\control_inst.$add$./control/control.sv:45$348 ($add).
Removed top 31 bits (of 32) from mux cell top.$flatten\motor_inst.$ternary$./motor_drv/motor_drv.sv:35$344 ($mux).
Removed top 31 bits (of 32) from mux cell top.$flatten\motor_inst.$ternary$./motor_drv/motor_drv.sv:34$342 ($mux).
Removed top 7 bits (of 8) from port B of cell top.$flatten\motor_inst.$add$./motor_drv/motor_drv.sv:27$339 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\motor_inst.$add$./motor_drv/motor_drv.sv:24$337 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\motor_inst.$add$./motor_drv/motor_drv.sv:24$337 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:39$334 ($add).
Removed top 13 bits (of 32) from port Y of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:39$334 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:33$333 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:33$333 ($add).
Removed top 18 bits (of 32) from port A of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:23$329 ($add).
Removed top 17 bits (of 32) from port B of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:23$329 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:23$329 ($add).
Removed top 3 bits (of 8) from port B of cell top.$flatten\decoder_inst.$eq$./ir_decoder/ir_decoder.v:91$53 ($eq).
Removed top 22 bits (of 32) from port B of cell top.$flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:84$50 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:84$49 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:81$48 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:81$48 ($add).
Removed top 23 bits (of 32) from port B of cell top.$flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:78$46 ($gt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:78$45 ($lt).
Removed top 20 bits (of 32) from port B of cell top.$flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:70$42 ($lt).
Removed top 21 bits (of 32) from port B of cell top.$flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:70$41 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:60$39 ($add).
Removed top 11 bits (of 32) from port Y of cell top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:60$39 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:32$34 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:32$34 ($add).
Removed top 2 bits (of 12) from port B of cell top.$flatten\hysteresis_inst.$lt$./adc_hysteresis/adc_hysteresis.sv:19$326 ($lt).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$680 ($ne).
Removed top 16 bits (of 32) from wire top.$flatten\control_inst.$add$./control/control.sv:45$348_Y.
Removed top 11 bits (of 32) from wire top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:60$39_Y.
Removed top 24 bits (of 32) from wire top.$flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:81$48_Y.
Removed top 23 bits (of 32) from wire top.$flatten\motor_inst.$add$./motor_drv/motor_drv.sv:24$337_Y.
Removed top 16 bits (of 32) from wire top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:33$333_Y.
Removed top 13 bits (of 32) from wire top.$flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:39$334_Y.

8.15. Executing PEEPOPT pass (run peephole optimizers).

8.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

8.17. Executing SHARE pass (SAT-based resource sharing).

8.18. Executing TECHMAP pass (map to technology primitives).

8.18.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

8.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~348 debug messages>

8.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.21. Executing TECHMAP pass (map to technology primitives).

8.21.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

8.21.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

8.21.3. Continuing TECHMAP pass.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_soft_mul for cells of type $mul.
No more expansions possible.
<suppressed ~43 debug messages>

8.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\decoder_inst.$mul$./ir_decoder/ir_decoder.v:41$36 ($mul).
  creating $macc model for $flatten\control_inst.$add$./control/control.sv:45$348 ($add).
  creating $macc model for $flatten\control_inst.$add$./control/control.sv:86$352 ($add).
  creating $macc model for $flatten\control_inst.$add$./control/control.sv:94$357 ($add).
  creating $macc model for $flatten\control_inst.$sub$./control/control.sv:90$354 ($sub).
  creating $macc model for $flatten\control_inst.$sub$./control/control.sv:98$359 ($sub).
  creating $macc model for $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:32$34 ($add).
  creating $macc model for $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:60$39 ($add).
  creating $macc model for $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:81$48 ($add).
  creating $macc model for $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:24$337 ($add).
  creating $macc model for $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:27$339 ($add).
  creating $macc model for $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:23$329 ($add).
  creating $macc model for $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:33$333 ($add).
  creating $macc model for $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:39$334 ($add).
  creating $alu model for $macc $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:39$334.
  creating $alu model for $macc $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:33$333.
  creating $alu model for $macc $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:23$329.
  creating $alu model for $macc $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:27$339.
  creating $alu model for $macc $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:24$337.
  creating $alu model for $macc $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:81$48.
  creating $alu model for $macc $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:60$39.
  creating $alu model for $macc $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:32$34.
  creating $alu model for $macc $flatten\control_inst.$sub$./control/control.sv:98$359.
  creating $alu model for $macc $flatten\control_inst.$sub$./control/control.sv:90$354.
  creating $alu model for $macc $flatten\control_inst.$add$./control/control.sv:94$357.
  creating $alu model for $macc $flatten\control_inst.$add$./control/control.sv:86$352.
  creating $alu model for $macc $flatten\control_inst.$add$./control/control.sv:45$348.
  creating $macc cell for $flatten\decoder_inst.$mul$./ir_decoder/ir_decoder.v:41$36: $auto$alumacc.cc:365:replace_macc$732
  creating $alu model for $flatten\control_inst.$ge$./control/control.sv:89$353 ($ge): new $alu
  creating $alu model for $flatten\control_inst.$ge$./control/control.sv:97$358 ($ge): new $alu
  creating $alu model for $flatten\control_inst.$le$./control/control.sv:85$351 ($le): new $alu
  creating $alu model for $flatten\control_inst.$le$./control/control.sv:93$355 ($le): new $alu
  creating $alu model for $flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:70$41 ($gt): new $alu
  creating $alu model for $flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:78$46 ($gt): new $alu
  creating $alu model for $flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:84$49 ($gt): new $alu
  creating $alu model for $flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:70$42 ($lt): new $alu
  creating $alu model for $flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:78$45 ($lt): new $alu
  creating $alu model for $flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:84$50 ($lt): new $alu
  creating $alu model for $flatten\hysteresis_inst.$gt$./adc_hysteresis/adc_hysteresis.sv:21$327 ($gt): new $alu
  creating $alu model for $flatten\hysteresis_inst.$lt$./adc_hysteresis/adc_hysteresis.sv:19$326 ($lt): new $alu
  creating $alu model for $flatten\motor_inst.$lt$./motor_drv/motor_drv.sv:33$340 ($lt): new $alu
  creating $alu cell for $flatten\motor_inst.$lt$./motor_drv/motor_drv.sv:33$340: $auto$alumacc.cc:485:replace_alu$746
  creating $alu cell for $flatten\hysteresis_inst.$lt$./adc_hysteresis/adc_hysteresis.sv:19$326: $auto$alumacc.cc:485:replace_alu$757
  creating $alu cell for $flatten\hysteresis_inst.$gt$./adc_hysteresis/adc_hysteresis.sv:21$327: $auto$alumacc.cc:485:replace_alu$768
  creating $alu cell for $flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:84$50: $auto$alumacc.cc:485:replace_alu$773
  creating $alu cell for $flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:78$45: $auto$alumacc.cc:485:replace_alu$784
  creating $alu cell for $flatten\decoder_inst.$lt$./ir_decoder/ir_decoder.v:70$42: $auto$alumacc.cc:485:replace_alu$795
  creating $alu cell for $flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:84$49: $auto$alumacc.cc:485:replace_alu$806
  creating $alu cell for $flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:78$46: $auto$alumacc.cc:485:replace_alu$811
  creating $alu cell for $flatten\decoder_inst.$gt$./ir_decoder/ir_decoder.v:70$41: $auto$alumacc.cc:485:replace_alu$816
  creating $alu cell for $flatten\control_inst.$le$./control/control.sv:93$355: $auto$alumacc.cc:485:replace_alu$821
  creating $alu cell for $flatten\control_inst.$le$./control/control.sv:85$351: $auto$alumacc.cc:485:replace_alu$830
  creating $alu cell for $flatten\control_inst.$add$./control/control.sv:45$348: $auto$alumacc.cc:485:replace_alu$839
  creating $alu cell for $flatten\control_inst.$ge$./control/control.sv:89$353: $auto$alumacc.cc:485:replace_alu$842
  creating $alu cell for $flatten\control_inst.$add$./control/control.sv:86$352: $auto$alumacc.cc:485:replace_alu$851
  creating $alu cell for $flatten\control_inst.$ge$./control/control.sv:97$358: $auto$alumacc.cc:485:replace_alu$854
  creating $alu cell for $flatten\control_inst.$add$./control/control.sv:94$357: $auto$alumacc.cc:485:replace_alu$863
  creating $alu cell for $flatten\control_inst.$sub$./control/control.sv:90$354: $auto$alumacc.cc:485:replace_alu$866
  creating $alu cell for $flatten\control_inst.$sub$./control/control.sv:98$359: $auto$alumacc.cc:485:replace_alu$869
  creating $alu cell for $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:32$34: $auto$alumacc.cc:485:replace_alu$872
  creating $alu cell for $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:60$39: $auto$alumacc.cc:485:replace_alu$875
  creating $alu cell for $flatten\decoder_inst.$add$./ir_decoder/ir_decoder.v:81$48: $auto$alumacc.cc:485:replace_alu$878
  creating $alu cell for $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:24$337: $auto$alumacc.cc:485:replace_alu$881
  creating $alu cell for $flatten\motor_inst.$add$./motor_drv/motor_drv.sv:27$339: $auto$alumacc.cc:485:replace_alu$884
  creating $alu cell for $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:23$329: $auto$alumacc.cc:485:replace_alu$887
  creating $alu cell for $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:33$333: $auto$alumacc.cc:485:replace_alu$890
  creating $alu cell for $flatten\servo_inst.$add$./servo_pdm/servo_pdm.v:39$334: $auto$alumacc.cc:485:replace_alu$893
  created 26 $alu and 1 $macc cells.

8.23. Executing OPT pass (performing simple optimizations).

8.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

8.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.23.6. Executing OPT_DFF pass (perform DFF optimizations).

8.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

8.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.23.9. Rerunning OPT passes. (Maybe there is more to do..)

8.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

8.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.23.13. Executing OPT_DFF pass (perform DFF optimizations).

8.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.23.16. Finished OPT passes. (There is nothing left to do.)

8.24. Executing MEMORY pass.

8.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.24.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

8.24.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

8.24.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

8.24.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

8.24.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.24.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

8.24.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

8.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.24.10. Executing MEMORY_COLLECT pass (generating $mem cells).

8.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.26. Executing MEMORY_LIBMAP pass (mapping memories to cells).

8.27. Executing TECHMAP pass (map to technology primitives).

8.27.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4_'.
Successfully finished Verilog frontend.

8.27.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD_'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD_'.
Successfully finished Verilog frontend.

8.27.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

8.28. Executing OPT pass (performing simple optimizations).

8.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~39 debug messages>

8.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 9 cells.

8.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\control_inst.$procdff$630 ($adff) from module top (D = $flatten\control_inst.$0\motor_dc[7:0] [4:0], Q = \control_inst.motor_dc [4:0]).
Adding EN signal on $auto$ff.cc:266:slice$723 ($adffe) from module top (D = $flatten\control_inst.$procmux$417_Y [3:0], Q = \control_inst.servo_dc [3:0]).
Removing always-active EN on $auto$ff.cc:266:slice$684 ($adffe) from module top.

8.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 47 unused wires.
<suppressed ~19 debug messages>

8.28.5. Rerunning OPT passes. (Removed registers in this run.)

8.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

8.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.28.8. Executing OPT_DFF pass (perform DFF optimizations).

8.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.28.10. Finished fast OPT passes.

8.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

8.30. Executing OPT pass (performing simple optimizations).

8.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

8.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.6. Executing OPT_DFF pass (perform DFF optimizations).

8.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.30.9. Finished OPT passes. (There is nothing left to do.)

8.31. Executing TECHMAP pass (map to technology primitives).

8.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

8.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ecp5_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ecp5_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_80_ecp5_alu for cells of type $alu.
Using template $paramod$cc48387a3f2cae79a81035f3d5a9b4758cb77854\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$9befa12646ab1d64090f7cfa4f3c72972b2004e7\_80_ecp5_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ecp5_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add $techmap731$flatten\decoder_inst.$mul$./ir_decoder/ir_decoder.v:41$36.A * \gpio [3] (1x1 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$56db36dd837c61f698201a59746e660b34427163\_80_ecp5_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ecp5_alu for cells of type $alu.
Using template $paramod$9669242765a3949f1c734ed65c3466aa10284ebd\_80_ecp5_alu for cells of type $alu.
Using template $paramod$dabd763a490b72116fd0366265f1c240490e1c75\_80_ecp5_alu for cells of type $alu.
Using template $paramod$8e9abc271b5ea9ceed20eb22b1eb7c059db86d6f\_80_ecp5_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ecp5_alu for cells of type $alu.
Using template $paramod$5258c4be027081d402f7f7b8272ed9904a049b47\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~1651 debug messages>

8.32. Executing OPT pass (performing simple optimizations).

8.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1674 debug messages>

8.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1755 debug messages>
Removed a total of 585 cells.

8.32.3. Executing OPT_DFF pass (perform DFF optimizations).

8.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 216 unused cells and 1485 unused wires.
<suppressed ~217 debug messages>

8.32.5. Finished fast OPT passes.

8.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

8.35. Executing TECHMAP pass (map to technology primitives).

8.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

8.35.2. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
No more expansions possible.
<suppressed ~230 debug messages>

8.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~28 debug messages>

8.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

8.38. Executing LATTICE_GSR pass (implement FF init values).
Handling GSR in top.

8.39. Executing ATTRMVCP pass (move or copy attributes).

8.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 895 unused wires.
<suppressed ~1 debug messages>

8.41. Executing TECHMAP pass (map to technology primitives).

8.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

8.41.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

8.42. Executing ABC pass (technology mapping using ABC).

8.42.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 805 gates and 1071 wires to a netlist network with 264 inputs and 156 outputs.

8.42.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     194.
ABC: Participating nodes from both networks       =     403.
ABC: Participating nodes from the first network   =     195. (  68.18 % of nodes)
ABC: Participating nodes from the second network  =     208. (  72.73 % of nodes)
ABC: Node pairs (any polarity)                    =     195. (  68.18 % of names can be moved)
ABC: Node pairs (same polarity)                   =     180. (  62.94 % of names can be moved)
ABC: Total runtime =     0.07 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

8.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      285
ABC RESULTS:        internal signals:      651
ABC RESULTS:           input signals:      264
ABC RESULTS:          output signals:      156
Removing temp directory.
Removed 0 unused cells and 550 unused wires.

8.43. Executing TECHMAP pass (map to technology primitives).

8.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.43.2. Continuing TECHMAP pass.
Using template $paramod$451540f0f4d6738aa7ad07d81c5f0cead4cc4a73\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$251994398653c4cf8de320f1e306e535d5d2d624\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$33e58adf67c6b686a154c9ce8ebbc4b04b8cabc5\$lut for cells of type $lut.
Using template $paramod$ee19d45db61acb4c70d938b97483a4ed4b792645\$lut for cells of type $lut.
Using template $paramod$525425bfbe66d72ee88210d059d9a74f55ab8de8\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$d603971b0ecff1f2585a4ce7b6ab63b5c692ec6f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$8909602f9b5a4e39f4a8ab4eab79107084aa0ec7\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$10c5901d84c1f93246de29f724b2e6fbe7f58b66\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$30535ccdeb27ba8eefd55607d682c5dc19ea2c02\$lut for cells of type $lut.
Using template $paramod$70ec1560024f42a6ee9d29135d209995bcfb6713\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$9bdc414229f06e785dc8fd97a243faa9336e164a\$lut for cells of type $lut.
Using template $paramod$78f14802e7a6b7b884a6b9a9676e13cf744548dc\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$f67ad926234c6216d005ae991aa4cfdf5a71356a\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$2382b0dd4cb27fd4312681c40a6dd179c2a7a26a\$lut for cells of type $lut.
Using template $paramod$b75e8306635d621cb7e96e5d2ad1327ab1afa025\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$36b2ca4b0f027f713201c07a6cc48feb90fadfe2\$lut for cells of type $lut.
Using template $paramod$f138008936932b29403680b33e85dcdc597db220\$lut for cells of type $lut.
Using template $paramod$7bb6a37e65823eeb4b38c370fec30ab082759a14\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$eba7de026ff587370e320127e266317dae097a89\$lut for cells of type $lut.
Using template $paramod$cf652acbfbf67d2248e3045cd0f09c58ca55886c\$lut for cells of type $lut.
Using template $paramod$040791c04ea86e31acd675021d95f3dbcc5a17ea\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$c93083768903e88c37e0c9b82fead370b0886961\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011110 for cells of type $lut.
Using template $paramod$cdb3717a289706854e418a1ae73736a8a50b6522\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$19d04df0b2d3066d4f784a888a13b425337bbf86\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$77558e11fb40075c5d1bcb703e2e875e50a79dd6\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$f503ae6dd13af4ce255f26a38c5b2bb42d3444fc\$lut for cells of type $lut.
Using template $paramod$80e9136916c3a8f003e6fad38fbc668e82ba37e4\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$c94ec4efc5d62f0c1a8a4680cd8f0d4b05e30ad7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$61090ad81dea60f9d293b0587a5910e1feb62ffa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$a710625e9e626ef5063a9eaeb20113d01f3592de\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$55103f0882f1961022a23cd4ce35a4dbe2cef582\$lut for cells of type $lut.
Using template $paramod$ccc7f17bd8e592be2e57faed5e75fa4bda76f73e\$lut for cells of type $lut.
Using template $paramod$d966b99a15dda02f7b74b79e155acac10e34ef9a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$5d4bbc547f1862bddcd7181b7e7075c0f4f2cc0b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
No more expansions possible.
<suppressed ~1306 debug messages>

8.44. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6170.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6166.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6162.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6163.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6177.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6167.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6182.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6168.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6183.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6174.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6186.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5939.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6175.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6169.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6164.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6159.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6051.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6172.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6173.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6179.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6180.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6184.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6049.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6161.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6171.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6033.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6033.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6038.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6038.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6034.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6027.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6035.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6035.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6015.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6015.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6015.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6017.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5909.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5931.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5932.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5933.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5936.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5939.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5939.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5948.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5949.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5960.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5961.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5976.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5980.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5988.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5991.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6165.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6013.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6014.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6017.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6017.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6020.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6021.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6027.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6028.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6027.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6033.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6034.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6035.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6035.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6038.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6034.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6049.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6051.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6049.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6055.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6160.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6176.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$5989.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6077.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6038.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6185.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6051.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6138.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6139.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6150.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6152.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6153.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6154.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6155.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6156.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6158.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6158.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6159.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6160.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6161.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6162.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6163.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6164.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6165.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6166.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6167.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6168.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6169.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6170.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6171.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6172.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6173.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6174.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6175.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6176.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6177.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6178.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6179.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6180.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6181.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6182.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6183.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6184.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6185.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6186.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6181.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6178.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5906$auto$blifparse.cc:525:parse_blif$6191.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
Removed 0 unused cells and 636 unused wires.

8.45. Executing AUTONAME pass.
Renamed 17925 objects in module top (88 iterations).
<suppressed ~1546 debug messages>

8.46. Executing HIERARCHY pass (managing design hierarchy).

8.46.1. Analyzing design hierarchy..
Top module:  \top

8.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

8.47. Printing statistics.

=== top ===

   Number of wires:                700
   Number of wire bits:           2067
   Number of public wires:         700
   Number of public wire bits:    2067
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                927
     CCU2C                         137
     L6MUX21                        49
     LUT4                          458
     PFUMX                         124
     TRELLIS_FF                    159

8.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

8.49. Executing JSON backend.

Warnings: 52 unique messages, 54 total
End of script. Logfile hash: 6fcdd65c80, CPU: user 1.21s system 0.04s, MEM: 47.75 MB peak
Yosys 0.33 (git sha1 2584903a060)
Time spent: 20% 1x abc (0 sec), 17% 21x read_verilog (0 sec), ...
